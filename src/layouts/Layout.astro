---
interface Props {
  title: string;
  bodyClass?: string;
}

import { ViewTransitions } from "astro:transitions";

const { title, bodyClass } = Astro.props;
---

<!doctype html>
<html lang="en" class="scroll-smooth motion-reduce:scroll-auto dark">
  <head>
    <link rel="sitemap" href="/sitemap-index.xml" />
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;1,100;1,200;1,300;1,400;1,500;1,600&display=swap"
      rel="stylesheet"
    />
    <meta name="generator" content={Astro.generator} />
    <script is:inline>
      const themeMatcher =
        window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)");
      const event = new Event("theme-change");

      function setTheme(theme = undefined) {
        if (theme !== undefined) {
          let newTheme = theme;
          localStorage.setItem("theme", newTheme);
          const toggle = document.querySelector(".theme-toggle");
          document.documentElement.classList.toggle("dark");
          document.dispatchEvent(event);
          return;
        }
        localStorage.setItem(
          "theme",
          localStorage.getItem("theme") ||
            (themeMatcher && themeMatcher.matches ? "dark" : "light") ||
            "dark"
        );
        localStorage.getItem("theme") !== "dark" &&
          document.documentElement.classList.remove("dark");
      }

      themeMatcher.addEventListener("change", (e) => {
        setTheme(e.matches ? "dark" : "light");
      });
      themeMatcher.addListener("change", (e) => {
        setTheme(e.matches ? "dark" : "light");
      });
      setTheme();
      document.addEventListener("astro:after-swap", () => {
        setTheme();
      });
    </script>
    <title>{title}</title>
    <ViewTransitions fallback="swap" />
  </head>
  <body
    class:list={[
      "bg-neutral-100 text-black dark:bg-neutral-900 overflow-y-scroll antialiased dark:text-white duration-200",
      bodyClass ?? "",
    ]}
  >
    <slot />
    <style is:global>
      hr {
        @apply w-full border-[1px] border-neutral-700 print:border-neutral-500 my-4 rounded-full;
      }
    </style>
  </body>
</html>
