---
interface Image {
  url: string;
  width?: number;
  height?: number;
}
interface Props {
  title: string;
  description: string;
  href: string;
  publishedAt: string;
  image?: Image;
}
const {
  title,
  description,
  href,
  publishedAt,
  image = { url: "https://placehold.co/1200x630", width: 1200, height: 630 },
} = Astro.props;
---

<a
  href={href}
  class="w-full flex flex-col group p-4 bg-[#1c1e24] rounded-xl hover:-translate-y-1 duration-150"
>
  <img
    src={image.url}
    width={image.width}
    height={image.height}
    class="w-full h-[250px] md:h-[300px] object-cover object-center mb-2"
  />
  <div class="flex flex-col">
    <div>
      <h2 class="text-xl font-semibold">{title}</h2>
    </div>
    <div class="published_at font-[400] mt-1 mb-2 italic" id={publishedAt}>
    </div>
  </div>
  <h3 class="font-medium">
    {
      description.split(" ").slice(0, 50).join(" ") +
        (description.split(" ").length >= 50 ? "..." : "")
    }
  </h3>
</a>
<script>
  import { parseIsoDatetimeSince, formatIsoDatetime } from "../utils/functions";
  document.addEventListener("astro:page-load", () => {
    const publishedAts = document.querySelectorAll(".published_at");
    publishedAts.forEach((elem) => {
      elem.textContent = parseIsoDatetimeSince(elem.id);
      elem.appendChild(document.createElement("br"));
      const tooltipText = document.createElement("span");
      tooltipText.innerText = formatIsoDatetime(elem.id, true) as string;
      tooltipText.classList.add("pub_tooltip");
      elem.appendChild(tooltipText);
    });
  });
</script>
