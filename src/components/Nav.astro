---
interface Props {
  navClass?: string;
  center?: boolean;
}

const { navClass, center } = Astro.props;
---

<hr />
<nav
  class:list={[
    "flex text-lg items-center gap-4 child:underline child:underline-offset-2",
    navClass,
    center && "justify-center",
  ]}
>
  <a href="/">Home</a>
  <a href="https://vsahni.me">Portfolio</a>
  <a href="/posts">Posts</a>
  <a href="/rss.xml">RSS</a>
  <button
    type="button"
    role="switch"
    aria-label="Toggle Theme"
    transition:persist
    class="theme-toggle ml-1 text-black dark:text-white overflow-hidden flex flex-row duration-500 transition-[border] justify-center print:hidden w-[36px] h-[36px] rounded-md bg-transparent border-2 border-black dark:border-white"
  >
    <div
      class="h-[72px] w-full flex flex-col relative transition-all duration-500 translate-y-[-36px] dark:translate-y-[0]"
    >
      <div class="w-full h-[36px] p-1">
        <svg viewBox="0 0 24 24" astro-icon="ic:outline-dark-mode"
          ><path
            fill="currentColor"
            d="M9.37 5.51A7.35 7.35 0 0 0 9.1 7.5c0 4.08 3.32 7.4 7.4 7.4.68 0 1.35-.09 1.99-.27A7.014 7.014 0 0 1 12 19c-3.86 0-7-3.14-7-7 0-2.93 1.81-5.45 4.37-6.49zM12 3a9 9 0 1 0 9 9c0-.46-.04-.92-.1-1.36a5.389 5.389 0 0 1-4.4 2.26 5.403 5.403 0 0 1-3.14-9.8c-.44-.06-.9-.1-1.36-.1z"
          ></path></svg
        >
      </div>
      <div class="w-full h-[36px] p-1">
        <svg viewBox="0 0 24 24" astro-icon="ic:outline-light-mode"
          ><path
            fill="currentColor"
            d="M12 9c1.65 0 3 1.35 3 3s-1.35 3-3 3-3-1.35-3-3 1.35-3 3-3m0-2c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zM2 13h2c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1s.45 1 1 1zm18 0h2c.55 0 1-.45 1-1s-.45-1-1-1h-2c-.55 0-1 .45-1 1s.45 1 1 1zM11 2v2c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1s-1 .45-1 1zm0 18v2c0 .55.45 1 1 1s1-.45 1-1v-2c0-.55-.45-1-1-1s-1 .45-1 1zM5.99 4.58a.996.996 0 0 0-1.41 0 .996.996 0 0 0 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0s.39-1.03 0-1.41L5.99 4.58zm12.37 12.37a.996.996 0 0 0-1.41 0 .996.996 0 0 0 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0a.996.996 0 0 0 0-1.41l-1.06-1.06zm1.06-10.96a.996.996 0 0 0 0-1.41.996.996 0 0 0-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0l1.06-1.06zM7.05 18.36a.996.996 0 0 0 0-1.41.996.996 0 0 0-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0l1.06-1.06z"
          ></path></svg
        >
      </div>
    </div>
  </button>
</nav>
<hr />
<script>
  function initThemeToggle() {
    const event = new Event("theme-change");
    const toggle = document.querySelector(".theme-toggle") as HTMLInputElement;
    if (localStorage.getItem("theme") === "light") {
      toggle.checked = true;
      toggle.setAttribute("aria-checked", "true");
    } else {
      toggle.checked = false;
      toggle.setAttribute("aria-checked", "false");
    }
    toggle.onclick = (e) => {
      let newTheme =
        localStorage.getItem("theme") === "light" ? "dark" : "light";
      localStorage.setItem("theme", newTheme);
      toggle.setAttribute("aria-checked", newTheme);
      document.documentElement.classList.toggle("dark");
      document.dispatchEvent(event);
    };
  }
  document.addEventListener("astro:page-load", initThemeToggle);
</script>
